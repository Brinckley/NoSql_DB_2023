version: '3'

services:

  app:
    container_name: app
    build: 
      context: ./BookAndLive
    ports:
      - '8085:8085'
    networks: [ "pynet" ]
    environment:
      - MONGO_URI=mongodb://localhost:27017
      - MEMCACHED_URI=memcached_node_01:11211
      - MONGO_COLLECTION_CLIENT=client
      - MONGO_COLLECTION_RESERVATION=reservation
      - ELASTICSEARCH_INDEX_CLIENT=client
      - ELASTICSEARCH_INDEX_RESERVATION=reservation
      - ELASTICSEARCH_INDEX_ROOM=room
      - ELASTICSEARCH_URI=http://elastic:od+Ll5B2P57hXFZrQbR9@localhost:9200
    depends_on:
      mongo_db:
        condition: service_started
 #     elasticsearch:
 #       condition: service_healthy

  mongo_db:
    container_name: mongo_db
    image: mongo:latest
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./data/mongo:/data/db

  memcached_node_01:
    image: memcached

networks:
    pynet:
      driver: bridge